name: Build_ms_info

on:
  push:
    branches:
      - main
      - feature/*

jobs:


  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install virtualenv
        sudo apt-get update
        sudo apt-get install openssh-client -y
        curl -O -L "https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64"
        sudo mv cosign-linux-amd64 /usr/local/bin/cosign
        sudo chmod +x /usr/local/bin/cosign
        curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -v -b /usr/local/bin
        wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
        python -m pip install -q devsecops-engine-tools
        sudo dpkg -i trivy_0.18.3_Linux-64bit.deb
        trufflehog --version
        cosign version
        trivy --version

    - name: Run Unit Test
      run: |
        python -m virtualenv _venv
        source _venv/bin/activate
        python -m pip install --upgrade pip
        python -m pip install -r requirements_test.txt
        python -m pip install -r requirements.txt
        python -m pytest -x --cov=finance --cov-config=.coveragerc
        python -m coverage report -m
        python -m coverage xml


    - name: Run analysis on SonarQube
      if: ${{ github.event.pull_request.head.repo.fork == false }}
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: finance
        args: >
          -Dsonar.organization=cospina18
          -Dsonar.projectKey=cospina18_platform-coding-challenge
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.language=py
          -Dsonar.verbose=true
          -Dsonar.exclusions=**/test/**,**/example/**,**setup.py**,**hello_world**,**Dockerfile**,**/coverage/**
          -Dsonar.coverage.exclusions=**/test/**,**/example/**,**setup.py**,**hello_world**,**Dockerfile/**,**/coverage/**


    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        docker build -t 271590248982.dkr.ecr.us-east-1.amazonaws.com/poc-devsecops:ms_info -f finance/web/ms_info/src/deployment/docker/dockerfile .  --label test_ms_info

    - name: Run DevSecOps engine Toool secret scan
      run: |
        python -m pip install -q devsecops-engine-tools
        output=$(devsecops-engine-tools --platform_devops github --remote_config_repo devsecops_remote_config --tool engine_secret --folder_path /finance)
          echo "$output"
          if [[ $output == *"✘Failed"* ]]; then
            exit 1
          fi
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: DevSecOps Engine Tool - IaC
      run: |
        pip3 install -q devsecops-engine-tools
        output=$(devsecops-engine-tools --platform_devops github --remote_config_repo devsecops_remote_config --tool engine_iac)
        echo "$output"
        if [[ $output == *"✘Failed"* ]]; then
          exit 1
        fi
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image to ECR
      run: |
        docker push 271590248982.dkr.ecr.us-east-1.amazonaws.com/poc-devsecops:ms_info

    - name: DevSecOps Engine Tool - Trivy
      run: |
        pip3 install -q devsecops-engine-tools
        output=$(devsecops-engine-tools --platform_devops github --remote_config_repo devsecops_remote_config --tool engine_container --image_to_scan 271590248982.dkr.ecr.us-east-1.amazonaws.com/poc-devsecops:ms_info)
        echo "$output"
        if [[ $output == *"✘Failed"* ]]; then
          exit 1
        fi
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
